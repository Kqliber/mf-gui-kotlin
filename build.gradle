plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'maven-publish'
}

group 'me.bristermitten'
version '2.0.2'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url 'https://jitpack.io' }
    mavenLocal()
}

dependencies {
    implementation "me.mattstudios.utils:matt-framework-gui:2.0.2"
    compileOnly 'org.spigotmc:spigot-api:1.16.4-R0.1-SNAPSHOT'

    testImplementation 'junit:junit:4.12'
    testImplementation 'com.github.knightzmc:MockBukkit:7ef4b0be64'
    testCompileOnly 'org.spigotmc:spigot:1.16.4-R0.1-SNAPSHOT'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

publishing {
    repositories {
        maven {
            def releasesRepoUrl = "https://repo.bristermitten.me/repository/maven-releases"
            def snapshotsRepoUrl = "https://repo.bristermitten.me/repository/maven-snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username project.hasProperty('mavenUser') ? mavenUser : System.getenv('MAVEN_USER')
                password project.hasProperty('mavenPassword') ? mavenPassword : System.getenv('MAVEN_PASSWORD')
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}
